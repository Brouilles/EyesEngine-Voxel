#ifndef FW_STREAM_H_INCLUDED
#define FW_STREAM_H_INCLUDED

/////////////////////////////INCLUDE/////////////////////////
#include <iostream>
#include <string>
#include <fstream>
/////////////////////////////////////////////////////////////

class FW_Stream
{
public:
	FW_Stream();
	~FW_Stream();

	/////////////////////////////////////////////////////////////
	/// <summary> 
	///		Open stream on the file.
	/// </summary>
	/////////////////////////////////////////////////////////////
	bool FW_open(std::string filePos);

	/////////////////////////////////////////////////////////////
	/// <summary> 
	///		Close file.
	/// </summary>
	/////////////////////////////////////////////////////////////
	bool FW_close();

	/////////////////////////////////////////////////////////////
	/// <summary> 
	///		Search in file the value of specific parameter.
	/// </summary>
	/////////////////////////////////////////////////////////////
	std::string FW_search(std::string optionSearch);

	/////////////////////////////////////////////////////////////
	/// <summary> 
	///		written on an existing parameter and change its value.
	//		The parameter must be previously added. otherwise returns false.
	/// </summary>
	/////////////////////////////////////////////////////////////
	bool FW_write(std::string optionName, std::string value);

private:
	std::ifstream m_file;
};

#endif